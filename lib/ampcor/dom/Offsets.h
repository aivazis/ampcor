// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// parasim
// (c) 1998-2020 all rights reserved

// code guard
#if !defined(ampcor_dom_Offsets_h)
#define ampcor_dom_Offsets_h


// specification of the offset field between a pair of SLC rasters
// it's a map (r_x, r_y) -> (s_x, s_y) of indices of a reference raster to indices of a
// secondary raster

// it is laid out as two blocks of pairs of floats, with the reference indices in the first
// block, and the corresponding secondary indices in the second; the indices are floats because
// the algorithm can achieve sub-pixel resolution

// the indices are laid out as a {m_x, m_y} 2-d grid because in most use cases the reference
// points are generated by some 2-d strategy that attempts to cover the reference image; so
// {offsets_t} is a {2, m_x, m_y} grid
class ampcor::dom::Offsets : public layout_t<3> {
    // types
public:
    // me
    using offsets_type = Offsets;
    // my base
    using layout_type = layout_t<3>;
    using layout_const_reference = const layout_type &;
    // my parts
    using pixel_type = std::pair<float, float>;
    // my shape
    using shape_type = typename layout_type::shape_type;
    using shape_const_reference = const shape_type &;
    // my indices
    using index_type = typename layout_type::index_type;
    using index_const_reference = const index_type &;
    // size of things
    using size_type = typename shape_type::size_type;

    // metamethods
public:
    // whole raster specification
    constexpr Offsets(shape_const_reference);
    // for tiles
    constexpr Offsets(layout_const_reference);

    // interface
public:
    // the memory footprint; the cell capacity is given by the inherited {cells}
    constexpr auto bytes() const -> size_type;

    // slice factory
public:
    constexpr auto tile(index_const_reference, shape_const_reference) const -> offsets_type;

    // static interface
public:
    // the memory footprint of my pixels
    static constexpr auto bytesPerCell() -> size_type;
};


// get the inline definitions
#define ampcor_dom_Offsets_icc
#include "Offsets.icc"
#undef ampcor_dom_Offsets_icc


#endif

// end of file
