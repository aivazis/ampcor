// -*- C++ -*-
// -*- coding: utf-8 -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// parasim
// (c) 1998-2020 all rights reserved
//

// code guard
#if !defined(ampcor_cuda_correlators_Sequential_icc)
#error This header is an implementation detail of ampcor::cuda::correlators::Sequential
#endif


// meta-methods
// destructor
template <class slcT, class offsetsT>
ampcor::cuda::correlators::Sequential<slcT, offsetsT>::
~Sequential()
{}


// constructor
template <class slcT, class offsetsT>
ampcor::cuda::correlators::Sequential<slcT, offsetsT>::
    Sequential(int rank,
               slc_const_reference ref, slc_const_reference sec, offsets_reference map,
               slc_shape_const_reference chip, slc_shape_const_reference window,
               int refineFactor, int refineMargin, int zoomFactor) :
    // my rank
    _rank { rank },
    // access to the input rasters
    _ref { ref },
    _sec { sec },
    _map { map },
    // the shapes of tiles
    _refShape { chip },
    _secShape { window },
    // the correlation refinement parameters
    _refineFactor { refineFactor },
    _refineMargin { refineMargin },
    _zoomFactor { zoomFactor }
{
    // make a channel
    pyre::journal::debug_t channel("ampcor.sequential.setup");
    // show me
    channel
        << "[" << _rank << "]: "
        << "new Sequential worker:" << pyre::journal::newline
        // the reference tile shape
        << "  reference tiles:" << pyre::journal::newline
        << "     shape: {" << _refShape << "}" << pyre::journal::newline
        // the secondary tile coarse arena
        << "  secondary tiles:" << pyre::journal::newline
        << "     shape: {" << _secShape << "}" << pyre::journal::newline
        // flush
        << pyre::journal::endl(__HERE__);

    // all done
    return;
}


// end of file
