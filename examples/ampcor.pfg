;
; michael a.g. aïvázis <michael.aivazis@para-sim.com>
; parasim
; (c) 1998-2020 all rights reserved
;


; overall application configuration
ampcor.plexus:
    ; machine layout
    shell:
        hosts = 1 ; number of hosts
        tasks = 1 ; number of tasks per host
        gpus = 0  ; number of gpus per task


; configuration for the offset estimator action
ampcor.plexus.offsets:
    ; reference image: an SLC instance named {ref}; see below
    ; the setting below is equivalent to
    ;    reference = ampcor.dom.rasters.slc#ref
    reference = slc#ref
    ; secondary image: an SLC instance named {sec}; see below
    secondary = slc#sec
    ; correlator: an MGA correlator instance named {mga-large}; see below
    correlator = mga#tiles.large


; the reference raster
ref:
    ; pfs path to the data file
    data = ../data/20061231.slc
    ; shape
    shape = 36864,10344


; the secondary raster
sec:
    ; pfs path to the data file
    data = ../data/20070215.slc
    ; shape
    shape = 36864,10344


; correlator that uses large chips
tiles.large:
    ; reference chip size
    chip = 128, 128
    ; padding used to form the search window in the secondary raster
    padding = 32, 32
    ; the refinement factor
    refineFactor = 2
    ; the refinement margin
    refineMargin = 8
    ; the zoom factor
    zoomFactor = 8
    ; the generator of the initial guess: look below for the grid configuration
    coarse = grid#dense


; correlator that uses large chips but a smaller grid
tiles.medium:
    ; reference chip size
    chip = 128, 128
    ; padding used to form the search window in the secondary raster
    padding = 32, 32
    ; the refinement factor
    refineFactor = 2
    ; the refinement margin
    refineMargin = 8
    ; the zoom factor
    zoomFactor = 8
    ; the generator of the initial guess: look below for the grid configuration
    coarse = grid#medium


; correlator that uses large chips and a huge grid
tiles.huge:
    ; reference chip size
    chip = 128, 128
    ; padding used to form the search window in the secondary raster
    padding = 32, 32
    ; the refinement factor
    refineFactor = 2
    ; the refinement margin
    refineMargin = 8
    ; the zoom factor
    zoomFactor = 8
    ; the generator of the initial guess: look below for the grid configuration
    coarse = grid#huge


; correlator that uses small chips
tiles.small:
    ; reference chip size
    chip = 32, 32
    ; padding used to form the search window in the secondary raster
    padding = 8, 8
    ; the refinement factor
    refineFactor = 2
    ; the refinement margin
    refineMargin = 2
    ; the zoom factor
    zoomFactor = 2
    ; the generator of the initial guess: look below for the grid configuration
    coarse = grid#tiny


; correlator that uses tiny chips; used for sanity checks
tiles.tiny:
    ; reference chip size
    chip = 8, 8
    ; padding used to form the search window in the secondary raster
    padding = 2, 2
    ; the refinement factor
    refineFactor = 2
    ; the refinement margin
    refineMargin = 1
    ; the zoom factor
    zoomFactor = 1
    ; the generator of the initial guess: look below for the grid configuration
    coarse = grid#one


; an initial guess generator that
; - lays out tiles in the reference image om a uniformly spaced grid
; - and pairs them to tiles in the secondary image that are at a constant offset
dense:
    ; generate a grid of tiles over the reference raster of the given {shape}
    domain:
        shape = 120, 40
    ; by default, the secondary points are generated by shifting the reference points
    ; by a fixed amount
    functor:
        shift = 0, 0


; a medium grid of initial points
medium:
    ; a small grid used for debugging
    domain:
        shape = 60, 40


; a huge grid of initial points
huge:
    ; a small grid used for debugging
    domain:
        shape = 240, 80


; a small grid of initial points
tiny:
    ; a small grid used for debugging
    domain:
        shape = 2, 2


; the smallest non-trivial grid; used for sanity checks
one:
    ; one tile
    domain:
        shape = 1, 1


; end of file
